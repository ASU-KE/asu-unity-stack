// ASU Design System Form Field styles without Bootstrap variables to override.

form {
  /* Labels */
  // Already is color #191919
  label {
    font-size: 1rem;
    // Labels for required fields.
    svg.uds-field-required {
      font-size: 0.5rem;
      margin-right: 0.25rem;
      margin-bottom: 0.125rem;
      color: #b72a2a;
    }
  }

  /* Helper text */
  // color set in component's Bootstrap variable overrides.

  /* Input text */
  .form-control {
    color: #191919;

    /* Disabled input */
    &:disabled,
    &[readonly] {
      color: #bfbfbf;
      background: #e8e8e8;
      border: 1px solid #d0d0d0;
    }
  }

  input,
  textarea,
  select {
    // border-radius set in component's Bootstrap variable overrides.
    // height set in component's Bootstrap variable overrides.
    // padding set in component's Bootstrap variable overrides.
    padding-left: 1rem !important;
  }

  /* Input focus */
  input:focus,
  textarea:focus,
  select:focus {
    outline: none !important;
    box-shadow: none !important;
    border: 2px solid #191919 !important;
    border-radius: none;
  }

  /* Radios and Checkboxes - For more flexible control, this is a departure
    from Bootstrap 4 custom Checkboxes and Radios as described in:
    https://getbootstrap.com/docs/4.0/components/forms/#checkboxes-and-radios-1
    and has us instead managing these ourselves. */
  .form-check {
    margin: 1rem 0;

    input[type='radio'],
    input[type='checkbox'] {
      opacity: 0;
    }

    // Shared styling for Radios and Checkboxes.
    input[type='radio'],
    input[type='checkbox'] {
      + label {
        font-weight: normal;
        position: relative;
        display: inline-block;
        cursor: pointer;
        margin-left: 1rem;

        // Outer border.
        &::before {
          content: '';
          position: absolute;
          display: inline-block;
          left: -2.25rem;
          border: 1px solid $uds-color-base-gray-3;
          width: 1.5rem;
          height: 1.5rem;
          background: white;
        }
        // Inner positioning for checked.
        &::after {
          content: '';
          position: absolute;
          display: inline-block;
          left: -1.875rem;
          top: 0.375rem;
          width: 0.75rem;
          height: 0.75rem;
        }
      }
      &:checked {
        + label::after {
          background: black;
        }
      }
      &:focus {
        + label::before {
          border: 2px solid $uds-color-base-gray-7;
        }
      }
      &:disabled {
        + label::before {
          background: $uds-color-base-gray-2;
        }
      }
      // We can use this little trick here because the label follows the
      // disabled input.
      &:disabled + label {
        color: $uds-color-base-gray-4;
      }
    }

    // Radios only: make 'em round.
    input[type='radio'] {
      + label {
        // Radio outer circle.
        &::before {
          border-radius: 50%;
        }
        // Radio bullseye - selected
        &::after {
          border-radius: 50%;
        }
      }
    }

    // Checkboxes only: check 'em.
    input[type='checkbox'] {
      + label {
        // Adjust label ::before and ::after to get background-image svg
        // check centered right.
        &::before {
          left: -2.25rem;
          bottom: -0.1rem;
        }
        &::after {
          left: -2rem;
        }
      }
      // Checkbox check.
      &:checked {
        + label::after {
          background: transparent;
          // SVG of fa-check
          background-image: url("data:image/svg+xml,%3Csvg aria-hidden='true' focusable='false' data-prefix='fas' data-icon='check' class='svg-inline--fa fa-check fa-w-16' role='img' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath fill='currentColor' d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E");
          height: 1rem;
          width: 1rem;
        }
      }
    }
  }

  /* ERROR/SUCCESS VALIDATION - Client-side, using :valid and :invalid pseudo
    classes ala Bootstrap 4:
    https://getbootstrap.com/docs/4.0/components/forms/#validation */
  &.was-validated {
    .form-control:invalid {
      border-style: solid;
      border: 1px solid #b72a2a;
      border-bottom: 8px solid #b72a2a;
      // BS4 input height led to border eating padding. Resolved in variable
      // overrides by setting input heights to auto.
    }
    // Radios and checks individual labels shouldn't be colored.
    .form-check-input:invalid ~ .form-check-label {
      color: #191919;
    }
    // Select invalid feedback messages shouldn't have colored text.
    select ~ small.is-invalid,
    select ~ div.is-invalid {
      color: #191919;
    }

    //&.was-validated .form-control:valid {
    .form-control:valid {
      border-style: solid;
      border: 1px solid #446d12;
      border-bottom: 8px solid #446d12;
      // BS4 input height led to border eating padding. Resolved in variable
      // overrides by setting input heights to auto.
    }
    // Radios and checks individual labels shouldn't be colored.
    .form-check-input:valid ~ .form-check-label {
      color: #191919;
    }
    // Select valid feedback messages shouldn't have colored text.
    select ~ small.is-valid,
    select ~ div.is-valid {
      color: #191919;
    }
  }
  &.needs-validation {
    .invalid-feedback {
      display: none;
    }

    .valid-feedback {
      display: none;
    }
  }

  /* ERROR/SUCCESS VALIDATION - SERVER-SIDE
    using Bootstrap 4 .is-valid and .is-invalid classes. */
  input.is-invalid,
  textarea.is-invalid,
  select.is-invalid {
    border-style: solid;
    border: 1px solid #b72a2a;
    border-bottom: 8px solid #b72a2a;
    // BS4 input height led to border eating padding. Resolved in variable
    // overrides by setting input heights to auto.
  }
  /* checks and radios */
  small.is-invalid,
  div.is-invalid {
    margin-left: -1rem;
    margin-top: 1rem;
  }
  /* Error for group follows legend and doesn't need margin adjustment. */
  legend ~ small.is-invalid,
  legend ~ div.is-invalid,
  select ~ small.is-invalid,
  select ~ div.is-invalid {
    margin-left: inherit;
    margin-top: inherit;
    color: #b72a2a;
  }
  .invalid-feedback {
    display: inline-block;
    font-weight: bold;
    color: #191919;
    svg {
      // We don't implement svg icons as bkg images due to need for color
      // manipulation.
      color: #b72a2a;
      margin-right: 0.5rem;
    }
  }

  /* Success input */
  // border and icon #446D12
  input.is-valid,
  textarea.is-valid,
  select.is-valid {
    border-style: solid;
    border: 1px solid #446d12;
    border-bottom: 8px solid #446d12;
    // BS4 input height led to border eating padding. Resolved in variable
    // overrides by setting input heights to auto.
  }
  /* checks and radios */
  small.is-valid,
  div.is-valid {
    margin-left: -1rem;
    margin-top: 1rem;
  }
  /* Success for group follows legend and doesn't need margin adjustment. */
  legend ~ small.is-valid,
  legend ~ div.is-valid,
  select ~ small.is-valid,
  select ~ div.is-valid {
    margin-left: inherit;
    margin-top: inherit;
    color: #446d12;
  }
  .valid-feedback {
    display: inline-block;
    font-weight: bold;
    color: #191919;
    svg {
      // We don't implement svg icons as bkg images due to need for color
      // manipulation.
      color: #446d12;
      margin-right: 0.5rem;
    }
  }

  /* Trailing icon input */
  // icon color #bfbfbf
  // See how BS4 does .is-valid icon
  .input-group-trailing-icon {
    svg {
      position: absolute;
      right: 0.75rem;
      top: 0.75rem;
      color: #bfbfbf;
    }
  }

  /* VARIOUS BACKGROUNDS */

  &.uds-form-white {
    background-color: white;
  }
  &.uds-form-gray1 {
    background-color: $uds-color-base-gray-1;
  }
  &.uds-form-gray2 {
    background-color: $uds-color-base-gray-2;
  }
  &.uds-form-gray7 {
    background-color: $uds-color-base-gray-7;

    .form-control {
      /* Disabled input */
      &:disabled,
      &[readonly] {
        color: $uds-color-base-gray-5;
        background: $uds-color-base-gray-6;
        border: 1px solid $uds-color-base-gray-5;
      }
    }

    /* Dark Labels */
    // Already is color #191919
    label {
      color: $uds-color-base-gray-1;
    }

    input,
    textarea,
    select {
      background-color: $uds-color-base-gray-7;
      color: $uds-color-base-gray-1;
    }
    /* Dark Input focus */
    input:focus,
    textarea:focus,
    select:focus {
      background-color: $uds-color-base-gray-7;
      border: 2px solid $uds-color-base-gray-1 !important;
      color: $uds-color-base-gray-1;
    }

    legend {
      color: $uds-color-base-gray-1;
    }

    /* Dark Radios and Checkboxes */
    .form-check {
      input[type='radio'],
      input[type='checkbox'] {
        + label {
          // Outer border.
          &::before {
            border: 1px solid #707070;
            background: $uds-color-base-gray-7;
          }
          // Inner positioning for checked.
          &::after {
          }
        }
        &:checked {
          + label::after {
            background: $uds-color-base-gray-1;
          }
        }
        &:focus {
          + label::before {
            border: 2px solid $uds-color-base-gray-1;
          }
        }
        &:disabled {
          + label::before {
            background: $uds-color-base-gray-6;
            border-color: $uds-color-base-gray-5;
          }
        }
        // We can use this little trick because the label follows the disabled
        // input.
        &:disabled + label {
          color: $uds-color-base-gray-4;
        }
      }

      // Dark checkboxes only: check 'em.
      input[type='checkbox'] {
        // Checkbox check for dark bkg.
        &:checked {
          + label::after {
            // SVG of fa-check
            background-image: url("data:image/svg+xml,%3Csvg aria-hidden='true' focusable='false' data-prefix='fas' data-icon='check' class='svg-inline--fa fa-check fa-w-16' role='img' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath fill='currentColor' d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E");
            // Alter SVG bkg img color via filter. Filter calculation tool:
            // https://codepen.io/sosuke/pen/Pjoqqp
            filter: invert(100%) sepia(28%) saturate(2502%) hue-rotate(222deg)
              brightness(144%) contrast(94%);
          }
        }
      }
    }

    /* Dark error input */
    input.is-invalid,
    textarea.is-invalid,
    select.is-invalid {
      border-style: solid;
      border: 1px solid #cc2f2f;
      border-bottom: 8px solid #cc2f2f;
      // BS4 input height led to border eating padding. Resolved in variable
      // overrides by setting input heights to auto.
    }
    .invalid-feedback {
      font-weight: bold;
      color: $uds-color-base-gray-1;
      svg {
        // We don't implement svg icons as bkg images due to need for color
        // manipulation.
        color: #cc2f2f;
        margin-right: 0.5rem;
      }
    }

    /* Dark success input */
    input.is-valid,
    textarea.is-valid,
    select.is-valid {
      border-style: solid;
      border: 1px solid #78be20;
      border-bottom: 8px solid #78be20;
      // BS4 input height led to border eating padding. Resolved in variable
      // overrides by setting input heights to auto.
    }
    .valid-feedback {
      font-weight: bold;
      color: $uds-color-base-gray-1;
      svg {
        // We don't implement svg icons as bkg images due to need for color
        // manipulation.
        color: #78be20;
        margin-right: 0.5rem;
      }
    }
  }
}
